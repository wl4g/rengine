# Copyright (c) 2017 ~ 2025, the original authors individual Inc,
# All rights reserved. Contact us James Wong <jameswong1376@gmail.com>
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# #### Rengine default template configuration for client eventbus. ####
#
rengine:
  ## see:com.wl4g.rengine.client.springboot.config.ClientEventbusAutoConfiguration.ClientEventbusProperties
  eventbus:
    topic: rengine_event
    store:
      provider: ROCKSDB
      rocksdb:
        createDBIfMissing: true
        dataDir: /tmp/rocksdb-data
        ## see:https://github1s.com/apache/flink/blob/release-1.15.1/flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBResource.java#L186-L113
        blockCacheSizeMb: 40960
        maxOpenFiles: -1
        useFsync: true
        maxBackgroundJobs: 4
        statsDumpPeriodSec: 0
        infoLogLevel: HEADER_LEVEL
      ehcache:
        dataDir: /tmp/ehcache-data
        ## The cached data elimination algorithm.
        eliminationAlg: LRU ## Default by LRU, options(LRU|LFU|FIFO)
        ## The number of entries not persisted to keep in memory.
        heapEntries: 1 ## Default by 1
        ## The number of data size not persisted to keep in memory. must be less than diskSize
        offHeapSize: 1B ## Default by 1B
        ## The number of total data size not persisted to keep in disk. must be greater than offHeapSize
        diskSize: 1TB ## Default by 1TB
      redis:
        cachePrefix: rengine:eventbus
        expireMs: 60_000
      memory:
        ## If you wish the cache should not exceed this number of entries, the cache will evict recently or infrequently
        ## used entries when it does, WARNING: the cache may evict entries before this limit is exceeded - usually
        ## when the cache size is close to the limit.
        maximumSize: 100_000 ## Default by 100_000
        ## The expiration interval based on write time, all cache entry reads and writes are updated.
        expireAfterAccessMs: 60_000 ## Default by 60_000
        ## The expiration interval based on access time, all cache entries are updated only by write operations.
        expireAfterWriteMs: 600_000 ## Default by 600_000
        ## The number of concurrent cache operations, that is, the number of underlying cache block/segment locks.
        concurrencyLevel: 4 ## Default by 4
      compaction:
        threadPools: 1
    kafka:
      closingTimeout: 1m
      #properties: {}
    pulsar:
      closingTimeout: 1m
      #properties: {}
    rabbitmq:
      closingTimeout: 1m
      #properties: {}