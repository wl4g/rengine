## Copyright (c) 2017 ~ 2025, the original authors individual Inc,
## All rights reserved. Contact us James Wong <jameswong1376@gmail.com>
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
## see:https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
## see:https://github.com/apache/rengine/blob/master/.github/workflows/build_and_test.yml
## see:https://github.com/quarkusio/quarkus/blob/main/.github/workflows/release-build.yml

name: Build deploy and release images

on:
  workflow_call: ## This the definition of the callee.
    inputs:
      #timeout:
      #  required: false
      #  type: number
      #  default: 10
      repository:
        required: false
        type: string
        default: wl4g/rengine
      runs-on:
        required: false
        type: string
        default: ubuntu-20.04
      java:
        required: false
        type: string
        default: 11
      branch:
        required: false
        type: string
        default: ""
      build-mvn-opts:
        required: false
        type: string
        default: ""
      enable-build:
        required: false
        type: boolean
        default: true
      enable-deploy:
        required: false
        type: boolean
        default: false
      enable-build-image-apiserver-tar:
        required: false
        type: boolean
        default: true
      enable-build-image-apiserver-spingjar:
        required: false
        type: boolean
        default: false
      enable-build-image-controller-tar:
        required: false
        type: boolean
        default: true
      enable-build-image-controller-springjar:
        required: false
        type: boolean
        default: false
      enable-build-image-executor-tar:
        required: false
        type: boolean
        default: true
      enable-build-image-executor-native:
        required: false
        type: boolean
        default: false
      enable-push-image-docker-hub:
        required: false
        type: boolean
        default: false
      enable-push-image-ghcr:
        required: false
        type: boolean
        default: true
    secrets: ## see:https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-of-onworkflow_callsecrets
      PERSONAL_ACCESS_TOKEN:
        description: 'A developer personal token from the caller workflow'
        required: false
      OSSRH_USERNAME:
        description: 'A OSSRH username from the caller workflow'
        required: false
      OSSRH_TOKEN:
        description: 'A OSSRH token from the caller workflow'
        required: false
      DOCKERHUB_USERNAME:
        description: 'A image registry username from the caller workflow'
        required: false
      DOCKERHUB_TOKEN:
        description: 'A image registry password from the caller workflow'
        required: false

jobs:
  prepares:
    if: github.repository == '${{ inputs.repository }}'
    runs-on: ${{ inputs.runs-on || 'ubuntu-latest' }}
    outputs:
      repo_name: ${{ steps.image-outputs.outputs.repo_name }}
      #image_name: ${{ steps.image-outputs.outputs.image_name }}
      image_tag: ${{ steps.image-outputs.outputs.image_tag }}
      #image_url: ${{ steps.image-outputs.outputs.image_url }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          repository: wl4g/rengine
          ref: ${{ inputs.branch || github.event.ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Generate image URL
        id: image-outputs
        run: |
          ## Convert to lowercase to meet Docker repo name requirement
          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          REPO_BRANCH=$(echo "${{ github.event.ref }}"|awk -F '/' '{print $3}')
          ## see:https://docs.github.com/en/developers/webhooks-and-events/events/github-event-types#event-payload-object-for-pushevent
          IMG_TAG=$(echo ${{ github.event.before }}|cut -c 1-12)-$(date +%Y%m%d%H%M%S) # or ${{ github.run_id }}
          echo "DEBUG: repo_name : $REPO_OWNER"
          echo "DEBUG: repo_branch : $REPO_BRANCH"
          echo "DEBUG: image_tag : $IMG_TAG"
          echo "repo_name=$REPO_OWNER" >> $GITHUB_OUTPUT
          echo "repo_branch=$REPO_BRANCH" >> $GITHUB_OUTPUT
          echo "image_tag=$IMG_TAG" >> $GITHUB_OUTPUT

  build-push-image:
    needs: prepares
    if: github.repository == 'wl4g/rengine'
    runs-on: ${{ inputs.runs-on || 'ubuntu-latest' }}
    permissions:
      packages: write
    timeout-minutes: 30
    steps:
      ## Notice: Calling other workflows is not supported here. Different jobs will correspond 
      ## to different container spaces. For example, checkout project files cannot be shared.
      #- name: Build and test
      #  uses: './.github/workflows/build_and_test.yaml'
      #  if: github.repository == 'wl4g/rengine'
      #  with:
      #    PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          repository: wl4g/rengine
          ref: ${{ inputs.branch }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      #- name: Sync the current branch with the latest in Rengine
      #  if: github.repository != 'wl4g/rengine'
      #  run: |
      #    git fetch https://github.com/$GITHUB_REPOSITORY.git ${GITHUB_REF#refs/heads/}
      #    git -c user.name='Rengine Test Account' -c user.email='renginetestacc@gmail.com' merge --no-commit --progress --squash FETCH_HEAD
      #    git -c user.name='Rengine Test Account' -c user.email='renginetestacc@gmail.com' commit -m "Merged commit" --allow-empty

      - name: Cache Maven local repository
        uses: actions/cache@v3
        if: ${{ inputs.enable-build == true }}
        with:
          path: ~/.m2/repository
          key: docs-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: docs-maven-

      - name: Set up JDK ${{ inputs.java }}
        if: ${{ inputs.enable-build == true }}
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ inputs.java }}

      - name: Build with Maven
        if: ${{ inputs.enable-build == true }}
        run: |
          export MAVEN_OPTS="-Xss64m -Xmx2g -XX:ReservedCodeCacheSize=1g -Dorg.slf4j.simpleLogger.defaultLogLevel=WARN"
          #export MAVEN_CLI_OPTS="--no-transfer-progress"
          export JAVA_VERSION=${{ inputs.java }}
          ./mvnw $MAVEN_CLI_OPTS --settings .github/mvn-settings.xml \
            -Dmaven.repo.local=$HOME/.m2/repository \
            -DskipTests \
            -DskipITs \
            -Dgpg.skip \
            -B \
            -T 4C \
            clean install \
            ${{ inputs.build-mvn-opts }}

      - name: Set up Maven Central Repository
        uses: actions/setup-java@v3
        if: >-
          ${{ inputs.enable-build == true && inputs.enable-deploy == true }}
        with:
          java-version: ${{ inputs.java }}
          distribution: 'adopt'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Deploy to Maven
        run: mvn --batch-mode deploy
        if: >-
          ${{ inputs.enable-build == true && inputs.enable-deploy == true }}
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}

      - name: Set up QEMU
        if: >-
          ${{ inputs.enable-build == true &&
               (  inputs.enable-build-image-apiserver-tar == true
               || inputs.enable-build-image-apiserver-springjar == true
               || inputs.enable-build-image-controller-tar == true
               || inputs.enable-build-image-controller-springjar == true
               || inputs.enable-build-image-executor-tar == true
               || inputs.enable-build-image-executor-native == true
             )
          }}
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        if: >-
          ${{ inputs.enable-build == true &&
               (  inputs.enable-build-image-apiserver-tar == true
               || inputs.enable-build-image-apiserver-springjar == true
               || inputs.enable-build-image-controller-tar == true
               || inputs.enable-build-image-controller-springjar == true
               || inputs.enable-build-image-executor-tar == true
               || inputs.enable-build-image-executor-native == true
             )
          }}
        uses: docker/setup-buildx-action@v2

      ## see:https://docs.docker.com/build/ci/github-actions/examples/
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        if: ${{ inputs.enable-build == true && inputs.enable-build-image- == true }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        if: ${{ inputs.enable-build == true && inputs.enable-push-image-ghcr == true }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # github.repository_owner
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Debugging 2
        run: |
          echo "DEBUG: $(pwd)"
          ls -al ./

      ### see:https://github.com/docker/build-push-action#inputs
      #- name: Build and push
      #  id: docker_build
      #  uses: docker/build-push-action@v3
      #  with:
      #    context: "{{defaultContext}}:${{ inputs.moduleName }}"
      #    file: ./build/docker/Dockerfile.springtar
      #    platforms: linux/amd64 # linux/arm64
      #    push: true # ${{ github.ref_type == 'tag' }}
      #    # Use the infra image cache to speed up.
      #    #cache-from: type=registry,ref=wl4g-rengine-github-action-image-cache:${{ inputs.branch }}
      #    args: APP_NAME=${{ inputs.moduleName }}
      #    tags: |
      #      ghcr.io/${{ needs.prepares.outputs.image_url }}

      - name: Build image for ApiServer (tar)
        if: ${{ inputs.enable-build == true && inputs.enable-build-image-apiserver-tar == true }}
        run: |
          echo "DEBUG: Building image for ApiServer (tar) ..."
          export MAVEN_OPTS="-Xss64m -Xmx2g -XX:ReservedCodeCacheSize=1g -Dorg.slf4j.simpleLogger.defaultLogLevel=WARN"
          #export MAVEN_CLI_OPTS="--no-transfer-progress"
          export JAVA_VERSION=${{ inputs.java }}
          ./mvnw $MAVEN_CLI_OPTS \
            -Dmaven.repo.local=$HOME/.m2/repository \
            -DskipTests \
            -DskipITs \
            -Dgpg.skip \
            -B \
            -f apiserver/pom.xml \
            clean package \
            -Pbuild:tar:docker \
            ${{ inputs.mvn-opts }}

      - name: Build image for Controller (tar)
        if: ${{ inputs.enable-build == true && inputs.enable-build-image-controller-tar == true }}
        run: |
          echo "DEBUG: Building image for Controller (tar) ..."
          export MAVEN_OPTS="-Xss64m -Xmx2g -XX:ReservedCodeCacheSize=1g -Dorg.slf4j.simpleLogger.defaultLogLevel=WARN"
          #export MAVEN_CLI_OPTS="--no-transfer-progress"
          export JAVA_VERSION=${{ inputs.java }}
          ./mvnw $MAVEN_CLI_OPTS \
            -Dmaven.repo.local=$HOME/.m2/repository \
            -DskipTests \
            -DskipITs \
            -Dgpg.skip \
            -B \
            -f controller/pom.xml \
            clean package \
            -Pbuild:tar:docker \
            ${{ inputs.mvn-opts }}

      - name: Build image for Executor (tar)
        if: ${{ inputs.enable-build == true && inputs.enable-build-image-executor-tar == true }}
        run: |
          echo "DEBUG: Building image for Executor (tar) ..."
          export MAVEN_OPTS="-Xss64m -Xmx2g -XX:ReservedCodeCacheSize=1g -Dorg.slf4j.simpleLogger.defaultLogLevel=WARN"
          #export MAVEN_CLI_OPTS="--no-transfer-progress"
          export JAVA_VERSION=${{ inputs.java }}
          ./mvnw $MAVEN_CLI_OPTS \
            -Dmaven.repo.local=$HOME/.m2/repository \
            -DskipTests \
            -DskipITs \
            -Dgpg.skip \
            -B \
            -f executor/pom.xml \
            clean package \
            -Pbuild:tar:docker \
            ${{ inputs.mvn-opts }}

      - name: Build image for Executor (native)
        if: ${{ inputs.enable-build == true && inputs.enable-build-image-executor-native == true }}
        run: |
          echo "DEBUG: Building image for Executor (native) ..."
          export MAVEN_OPTS="-Xss64m -Xmx2g -XX:ReservedCodeCacheSize=1g -Dorg.slf4j.simpleLogger.defaultLogLevel=WARN"
          #export MAVEN_CLI_OPTS="--no-transfer-progress"
          export JAVA_VERSION=${{ inputs.java }}
          ./mvnw $MAVEN_CLI_OPTS \
            -Dmaven.repo.local=$HOME/.m2/repository \
            -DskipTests \
            -DskipITs \
            -Dgpg.skip \
            -B \
            -f executor/pom.xml \
            clean package \
            -Pnative \
            ${{ inputs.mvn-opts }}

      - name: Push image for ApiServer (tar)
        if: ${{ inputs.enable-build == true && inputs.enable-build-image-apiserver-tar == true }}
        continue-on-error: true
        run: |
          echo "DEBUG: Pushing image for ApiServer (tar) ..."
          docker push ghcr.io/${{ needs.prepares.outputs.repo_name }}/rengine-apiserver:${{ needs.prepares.outputs.image_tag }}

      - name: Push image for ApiServer (springjar)
        if: ${{ inputs.enable-build == true && inputs.enable-build-image-apiserver-springjar == true }}
        continue-on-error: true
        run: |
          echo "DEBUG: Pushing image for ApiServer (tar) ..."
          docker push ghcr.io/${{ needs.prepares.outputs.repo_name }}/rengine-apiserver:${{ needs.prepares.outputs.image_tag }}

      - name: Push image for Controller (tar)
        if: ${{ inputs.enable-build == true && inputs.enable-build-image-controller-tar == true }}
        continue-on-error: true
        run: |
          echo "DEBUG: Pushing image for Controller (tar) ..."
          docker push ghcr.io/${{ needs.prepares.outputs.repo_name }}/rengine-controller:${{ needs.prepares.outputs.image_tag }}

      - name: Push image for Controller (springjar)
        if: ${{ inputs.enable-build == true && inputs.enable-build-image-controller-springjar == true }}
        continue-on-error: true
        run: |
          echo "DEBUG: Pushing image for Controller (tar) ..."
          docker push ghcr.io/${{ needs.prepares.outputs.repo_name }}/rengine-controller:${{ needs.prepares.outputs.image_tag }}

      - name: Push image for Executor (tar)
        if: ${{ inputs.enable-build == true && inputs.enable-build-image-executor-tar == true }}
        continue-on-error: true
        run: |
          echo "DEBUG: Pushing image for Executor (tar) ..."
          docker push ghcr.io/${{ needs.prepares.outputs.repo_name }}/rengine-executor:${{ needs.prepares.outputs.image_tag }}

      - name: Push image for Executor (native)
        if: ${{ inputs.enable-build == true && inputs.enable-build-image-executor-native == true }}
        continue-on-error: true
        run: |
          echo "DEBUG: Pushing image for Executor (native) ..."
          docker push ghcr.io/${{ needs.prepares.outputs.repo_name }}/rengine-executor-native:${{ needs.prepares.outputs.image_tag }}

