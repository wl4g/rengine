## Copyright (c) 2017 ~ 2025, the original authors individual Inc,
## All rights reserved. Contact us James Wong <jameswong1376@gmail.com>
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
## see:https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
## see:https://github.com/apache/rengine/blob/master/.github/workflows/build_and_test.yml
## see:https://github.com/quarkusio/quarkus/blob/main/.github/workflows/release-build.yml

name: Build and release images

on:
  ## This the definition of the callee.
  workflow_call:
    inputs:
      component: ## Build for rengine component module name.
        required: false
        type: string
        default: "apiserver"
      push-dockerhub:
        required: false
        type: boolean
        default: false
      push-ghcr:
        required: false
        type: boolean
        default: true
      mvn-opts:
        required: false
        type: string
        default: "-Pbuild:tar:docker"
    secrets: ## see:https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-of-onworkflow_callsecrets
      PERSONAL_ACCESS_TOKEN:
        description: 'A developer personal token passed from the caller workflow'
        required: false
      DOCKERHUB_USERNAME:
        description: 'A image registry username passed from the caller workflow'
        required: false
      DOCKERHUB_TOKEN:
        description: 'A image registry password passed from the caller workflow'
        required: false

jobs:
  precondition:
    permissions:
      packages: write
    runs-on: ubuntu-20.04
    outputs:
      image_repo: ${{ steps.image-outputs.outputs.image_repo }}
      image_name: ${{ steps.image-outputs.outputs.image_name }}
      image_tag: ${{ steps.image-outputs.outputs.image_tag }}
      image_url: ${{ steps.image-outputs.outputs.image_url }}
    steps:
      - name: Generate image URL
        id: image-outputs
        run: |
          # Convert to lowercase to meet Docker repo name requirement
          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "DEBUG: REPO_OWNER : $REPO_OWNER"
          IMG_NAME="rengine-${{ inputs.component }}"
          echo "DEBUG: IMG_NAME : $IMG_NAME"
          # see:https://docs.github.com/en/developers/webhooks-and-events/events/github-event-types#event-payload-object-for-pushevent
          IMG_TAG=$(echo ${{ github.event.before }}|cut -c 1-12)-$(date +%Y%m%d%H%M%S) # or ${{ github.run_id }}
          echo "DEBUG: IMG_TAG : $IMG_TAG"
          echo "image_repo=$REPO_OWNER" >> $GITHUB_OUTPUT
          echo "image_name=$IMG_NAME" >> $GITHUB_OUTPUT
          echo "image_tag=$IMG_TAG" >> $GITHUB_OUTPUT
          echo "image_url=$REPO_OWNER/$IMG_NAME:$IMG_TAG" >> $GITHUB_OUTPUT

  build-push-image:
    permissions:
      packages: write
    needs: precondition
    runs-on: ubuntu-20.04
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      ## see:https://docs.docker.com/build/ci/github-actions/examples/
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        if: ${{ inputs.push-dockerhub == true }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        if: ${{ inputs.push-ghcr == true }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # github.repository_owner
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout rengine repository
        uses: actions/checkout@v3
        if: github.repository == 'wl4g/rengine'
        with:
          fetch-depth: 1
          repository: wl4g/rengine
          ref: ${{ inputs.branch }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Debugging
        run: |
          echo "DEBUG: $(pwd)"
          ls -al ./

      - name: Prepared build with Maven
        timeout-minutes: 10
        run: |
          echo "DEBUG: Preparing build release for: ${{ inputs.component }}"
          export MAVEN_OPTS="-Xss64m -Xmx2g -XX:ReservedCodeCacheSize=1g -Dorg.slf4j.simpleLogger.defaultLogLevel=WARN"
          #export MAVEN_CLI_OPTS="--no-transfer-progress"
          export JAVA_VERSION=${{ inputs.java }}
          ./mvnw $MAVEN_CLI_OPTS --settings .github/mvn-settings.xml \
            -Dmaven.repo.local=$HOME/.m2/repository \
            -DskipTests \
            -DskipITs \
            -Dgpg.skip \
            -B \
            clean install -T4C

      - name: Build image (Manual)
        timeout-minutes: 10
        run: |
          echo "DEBUG: Building image release for : ${{ inputs.component }}"
          export MAVEN_OPTS="-Xss64m -Xmx2g -XX:ReservedCodeCacheSize=1g -Dorg.slf4j.simpleLogger.defaultLogLevel=WARN"
          #export MAVEN_CLI_OPTS="--no-transfer-progress"
          export JAVA_VERSION=${{ inputs.java }}
          ./mvnw $MAVEN_CLI_OPTS \
            -Dmaven.repo.local=$HOME/.m2/repository \
            -DskipTests \
            -DskipITs \
            -Dgpg.skip \
            -B \
            -f ${{ inputs.component }}/pom.xml \
            clean package \
            ${{ inputs.mvn-opts }}

      - name: Push image (Manual)
        timeout-minutes: 10
        run: |
          echo "DEBUG: Pushing image release for : ${{ inputs.component }}"
          docker push ghcr.io/${{ needs.precondition.outputs.image_url }}

      ### see:https://github.com/docker/build-push-action#inputs
      #- name: Build and push
      #  id: docker_build
      #  uses: docker/build-push-action@v3
      #  timeout-minutes: 10
      #  with:
      #    context: "{{defaultContext}}:${{ inputs.component }}"
      #    file: ./build/docker/Dockerfile.springtar
      #    platforms: linux/amd64 # linux/arm64
      #    push: true # ${{ github.ref_type == 'tag' }}
      #    # Use the infra image cache to speed up.
      #    #cache-from: type=registry,ref=wl4g-rengine-github-action-image-cache:${{ inputs.branch }}
      #    args: APP_NAME=${{ inputs.component }}
      #    tags: |
      #      ghcr.io/${{ needs.precondition.outputs.image_url }}

