# Copyright (c) 2017 ~ 2025, the original author wangl.sir individual Inc,
# All rights reserved. Contact us <Wanglsir@gmail.com, 983708408@qq.com>
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# #### Environment APM configuration. ####
#

spring:
  ## see:https://reflectoring.io/spring-boot-tracing/
  ## The entry of bind attrs to reactor context see:org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth#runMonoSupplierInScope()
  sleuth:
    enabled: true
    ## see:org.springframework.cloud.sleuth.autoconfig.instrument.web.TraceWebFluxConfiguration
    ## see:org.springframework.cloud.sleuth.autoconfig.instrument.web.SleuthWebProperties
    web:
      ## [Note]: In order to use canary tracking instead of the original TraceWebFilter, that must be turned off.
      ## see:com.wl4g.iam.gateway.trace.config.GrayTraceAutoConfiguration#canaryTraceWebFilter()
      enabled: false
      #skipPattern:
      #filterOrder:
      #ignoreAutoConfiguredSkipPatterns: false
    ### see:org.springframework.cloud.sleuth.autoconfig.brave.SleuthProperties
    #traceId128: false
    #supportsJoin: false
    ### see:org.springframework.cloud.sleuth.autoconfig.SleuthOpentracingProperties
    #opentracing:
    #  enabled: true
    ### see:org.springframework.cloud.sleuth.autoconfig.brave.ConditionalOnBraveEnabled
    ### see:org.springframework.cloud.sleuth.autoconfig.SleuthTracerProperties
    #tracer:
    #  mode: AUTO
    ### see:org.springframework.cloud.sleuth.autoconfig.brave.SamplerProperties
    #sampler:
    #  probability: 
    #  rate: 10
    ### see:org.springframework.cloud.sleuth.autoconfig.brave.instrument.grpc.BraveGrpcAutoConfiguration
    #grpc:
    #  enabled: true
    #zipkin:
    #  #sender: WEB ## Default by null, options(WEB|KAFKA|...)
    ## see:org.springframework.cloud.sleuth.autoconfig.otel.SleuthPropagationProperties
    propagation:
      type: B3 ## Default by B3, options(B3|AWS|JAEGER|W3C|OT_TRACER|CUSTOM)
      tag.enabled: true
    ## see:org.springframework.cloud.sleuth.autoconfig.SleuthBaggageProperties
    ## see:https://docs.spring.io/spring-cloud-sleuth/docs/3.1.1/reference/htmlsingle/#features-baggage
    baggage:
      ## Enables correlating the baggage context with logging contexts.
      correlationEnabled: true
      ## List of fields that should be propagated over the wire.
      correlationFields: principal
      ## List of fields that should automatically become tags.
      tagFields:
        - x-request-id
        - principal
        - region-code
      ## List of fields that should be accessible within the JVM process but not propagated over the wire.
      localFields:
        - x-request-id
        - principal
        - region-code
      ## List of fields that are referenced the same in-process as it is on the wire. For example, the field "x-vcap-request-id" would be set as-is including the prefix.
      remoteFields:
        - x-request-id
        - principal
        - region-code
    otel:
      ## see:org.springframework.cloud.sleuth.autoconfig.otel.OtelProperties
      config:
        ## Instrumentation name to be used to find a Tracer.
        instrumentationName: "org.springframework.cloud.spring-cloud-sleuth"
        ## Instrumentation version to be used to find a Tracer.
        #instrumentationVersion
        ## Sets the global default {@code Sampler} value.
        traceIdRatioBased: 1d ## Default by 0.1
        ## Returns the global default max number of attributes per {@link Span}.
        maxAttrs: 128 ## Default by 128
        ## Returns the global default max number of events per {@link Span}.
        maxEvents: 128 ## Default by 128
        ## Returns the global default max number of link entries per {@link Span}.
        maxLinks: 128 ## Default by 128
        ## Returns the global default max number of attributes per event.
        maxEventAttrs: 128 ## Default by 128
        ## Returns the global default max number of attributes per link.
        maxLinkAttrs: 128 ## Default by 128
      resource:
        enabled: true
      ## see:org.springframework.cloud.sleuth.autoconfig.otel.OtelPropagationProperties
      ## see:org.springframework.cloud.sleuth.otel.propagation.CompositeTextMapPropagator
      propagation:
        ## see:Enables default B3 Sleuth Baggage propagation. This will be automatically turned on when B3 propagation type gets picked.
        sleuthBaggage.enabled: true
        ## see:org.springframework.cloud.sleuth.autoconfig.otel.OtelPropagationConfiguration.PropagatorsConfiguration
        compositeTextMapPropagator.enabled: true
      ## see:org.springframework.cloud.sleuth.autoconfig.otel.OtelLogConfiguration
      ## see:org.springframework.cloud.sleuth.autoconfig.otel.OtelLogProperties
      ## The scope fields into MDC see:org.springframework.cloud.sleuth.otel.bridge.Slf4jBaggageApplicationListener#onScopeAttached()
      log:
        exporter.enabled: true ## Default by false
        slf4j.enabled: true ## Default by false
      ## see:org.springframework.cloud.sleuth.autoconfig.otel.OtelProcessorProperties
      processor:
        batch:
          ## The interval, in milliseconds, between two consecutive exports. Default is 5000.
          scheduleDelay: 5000
          ## The maximum queue size. Default is 2048.
          maxQueueSize: 2048
          ## The maximum batch size. Default is 512.
          maxExportBatchSize: 512
          ## The maximum allowed time, in milliseconds, to export data. Default is 30000.
          exporterTimeout: 30000
      ## see:org.springframework.cloud.sleuth.autoconfig.otel.OtelExporterProperties
      exporter:
        sleuthSpanFilter.enabled: true
        #otlp:
        #  endpoint: ${IAM_OLTP_ENDPOINT:http://localhost:4317}
        #  timeout: 10000
        jaeger:
          endpoint: ${IAM_JAEGER_ENDPOINT:http://localhost:14250}
          timeout: 10000

# see:org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties
management:
  server:
    address: 0.0.0.0
    port: 10108
    ssl:
      enabled: false
    servlet.contextPath: /
  security:
    enabled: false
    sensitive: true
  metrics:
    export:
      prometheus:
        enabled: true
      jmx:
        enabled: true
  endpoints:
    web:
      basePath: /actuator
      exposure:
        #exclude: /myapi
        include: '*'
    health: # see:org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties
      showDetails: always
      mongo.enabled: true
      solr.enabled: true
      db.enabled: true
