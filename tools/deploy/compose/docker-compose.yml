# Copyright (c) 2017 ~ 2025, the original author wangl.sir individual Inc,
# All rights reserved. Contact us James Wrong James Wong<jamewong1376@gmail.com>
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

version: "3"
networks:
  rengine_net:
    name: rengine_net
    driver: bridge
    external: false

services:

  ## ===================== MongoDB ======================

  mongodb:
    image: docker.io/bitnami/mongodb:4.4.6
    container_name: rengine_mongodb
    environment:
      - BITNAMI_DEBUG=true
      - MONGODB_REPLICA_SET_MODE=primary
      - ALLOW_EMPTY_PASSWORD=yes
      - MONGODB_SYSTEM_LOG_VERBOSITY=0
      - MONGODB_DISABLE_SYSTEM_LOG=no
      - MONGODB_DISABLE_JAVASCRIPT=no
      - MONGODB_ENABLE_JOURNAL=yes
      - MONGODB_ENABLE_IPV6=no
      - MONGODB_ENABLE_DIRECTORY_PER_DB=no
    restart: unless-stopped
    networks:
      - rengine_net
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - mongodb_data:/bitnami/mongodb/data

  ## ======================= MinIO =======================
  # see:https://github.com/minio/minio/blob/master/docs/orchestration/docker-compose/docker-compose.yaml
  minio:
    image: docker.io/minio/minio:RELEASE.2022-08-26T19-53-15Z
    command: 'server /data --console-address ":9900" --address ":9000"'
    container_name: rengine_minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    restart: unless-stopped
    networks:
      - rengine_net
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9900:9900"

  ## =================== Redis Cluster ===================

  redis-node-0:
    image: docker.io/bitnami/redis-cluster:7.0
    container_name: rengine_redis_node_0
    environment:
      - 'REDIS_PASSWORD=bitnami'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'
    restart: unless-stopped
    networks:
      - rengine_net
    volumes:
      - redis-cluster_data-0:/bitnami/redis/data
  redis-node-1:
    image: docker.io/bitnami/redis-cluster:7.0
    container_name: rengine_redis_node_1
    environment:
      - 'REDIS_PASSWORD=bitnami'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'
    restart: unless-stopped
    networks:
      - rengine_net
    volumes:
      - redis-cluster_data-1:/bitnami/redis/data
  redis-node-2:
    image: docker.io/bitnami/redis-cluster:7.0
    container_name: rengine_redis_node_2
    environment:
      - 'REDIS_PASSWORD=bitnami'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'
    restart: unless-stopped
    networks:
      - rengine_net
    volumes:
      - redis-cluster_data-2:/bitnami/redis/data
  redis-node-3:
    image: docker.io/bitnami/redis-cluster:7.0
    container_name: rengine_redis_node_3
    environment:
      - 'REDIS_PASSWORD=bitnami'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'
    restart: unless-stopped
    networks:
      - rengine_net
    volumes:
      - redis-cluster_data-3:/bitnami/redis/data
  redis-node-4:
    image: docker.io/bitnami/redis-cluster:7.0
    container_name: rengine_redis_node_4
    environment:
      - 'REDIS_PASSWORD=bitnami'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'
    restart: unless-stopped
    networks:
      - rengine_net
    volumes:
      - redis-cluster_data-4:/bitnami/redis/data
  redis-node-5:
    image: docker.io/bitnami/redis-cluster:7.0
    container_name: rengine_redis_node_5
    environment:
      - 'REDIS_PASSWORD=bitnami'
      - 'REDISCLI_AUTH=bitnami'
      - 'REDIS_CLUSTER_REPLICAS=1'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'
      - 'REDIS_CLUSTER_CREATOR=yes'
    restart: unless-stopped
    networks:
      - rengine_net
    volumes:
      - redis-cluster_data-5:/bitnami/redis/data
    depends_on:
      - redis-node-0
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4

  ## ======================= Zookeeper =======================

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.6.2
    container_name: rengine_zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    restart: unless-stopped
    networks:
      - rengine_net
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - zookeeper_data:/opt/bitnami/zookeeper/data/

  ## ======================= Kafka =======================

  kafka:
    image: docker.io/bitnami/kafka:2.2.0
    container_name: rengine_kafka
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
    restart: unless-stopped
    networks:
      - rengine_net
    depends_on:
      - zookeeper
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - kafka_data:/bitnami/kafka/data

  ## ======================= HBase =======================

  hbase:
    image: wl4g/hbase:hbase-2.1.0-phoenix-5.1.1
    command: '/bin/sh -c "hbase-daemon.sh start master; tail -f /dev/null"'
    container_name: rengine_hbase
    #environment:
    restart: unless-stopped
    networks:
      - rengine_net
    depends_on:
      - zookeeper
    links:
      - zookeeper
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - hbase_data:/tmp/

  ## =============== Rengine (apiserver) ================

  apiserver:
    image: wl4g/rengine-apiserver:1.0.0
    container_name: rengine_apiserver
    environment: # see:https://stackoverflow.com/questions/49767683/what-does-no-compatible-attachment-provider-is-available-mean
      - SPRING_ARTHAS_ENABLED=false
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/rengine
      - SPRING_REDIS_PASSWORD=bitnami
      - SPRING_REDIS_CLUSTER_NODES=redis-node-0:6379,redis-node-1:6379,redis-node-2:6379,redis-node-3:6379,redis-node-4:6379,redis-node-5:6379
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_REGION=us-east-1
      - MINIO_BUCKET=rengine
      - MINIO_TENANT_ACCESS_KEY=rengine
      - MINIO_TENANT_SECRET_KEY=123456
    restart: unless-stopped
    networks:
      - rengine_net
    depends_on: # Links will be created automatically
      - mongodb
      - minio
      - redis-node-0
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
      # for queries raw events from HBase
      #- zookeeper
      #- hbase
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - rengine_script_rootfs:/tmp/__rengine_script_rootfs
      - rengine_script_works:/tmp/__rengine_script_works
      - rengine_script_log:/tmp/__rengine_script_log
    ports:
      - "28001:28001"
      - "10108:10108"

  ## =============== Rengine (controller) ================

  controller:
    image: wl4g/rengine-controller:1.0.0
    container_name: rengine_controller
    environment: # see:https://stackoverflow.com/questions/49767683/what-does-no-compatible-attachment-provider-is-available-mean
      - SPRING_ARTHAS_ENABLED=false
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/rengine
      - SPRING_REDIS_PASSWORD=bitnami
      - SPRING_REDIS_CLUSTER_NODES=redis-node-0:6379,redis-node-1:6379,redis-node-2:6379,redis-node-3:6379,redis-node-4:6379,redis-node-5:6379
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_REGION=us-east-1
      - MINIO_BUCKET=rengine
      - MINIO_TENANT_ACCESS_KEY=rengine
      - MINIO_TENANT_SECRET_KEY=123456
      - RENGINE_CONTROLLER_ZOOKEEPER_SERVER_LISTS=zookeeper:2181
    restart: unless-stopped
    networks:
      - rengine_net
    depends_on: # Links will be created automatically
      - mongodb
      #- minio # for collect script logs to minio?
      - redis-node-0
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
      - zookeeper
      - kafka # for KafkaSubscriberController
      #- hbase # for collect script logs to hbase?
    links:
      - executor
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - rengine_script_log:/tmp/__rengine_script_log
    ports:
      - "28003:28003"
      - "10109:10108"

  ## =============== Rengine (executor) ================

  executor:
    image: wl4g/rengine-executor-native:1.0.0
    container_name: rengine_executor
    environment:
      - QUARKUS_MONGODB_CONNECTION_STRING=mongodb://mongodb:27017/rengine
      - QUARKUS_REDIS_PASSWORD=bitnami
      - QUARKUS_REDIS_HOSTS=redis://redis-node-0:6379,redis://redis-node-1:6379,redis://redis-node-2:6379,redis://redis-node-3:6379,redis://redis-node-4:6379,redis://redis-node-5:6379
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_REGION=us-east-1
      - MINIO_BUCKET=rengine
      - MINIO_TENANT_ACCESS_KEY=rengine
      - MINIO_TENANT_SECRET_KEY=123456
    restart: unless-stopped
    networks:
      - rengine_net
    depends_on: # Links will be created automatically
      - mongodb
      - minio
      - redis-node-0
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - rengine_script_log:/tmp/__rengine_script_log
    ports:
      - "28002:28002"

  ## =============== Rengine (job) ================

  job:
    image: wl4g/rengine-job:1.0.0
    container_name: rengine_job
    #environment:
    restart: unless-stopped
    networks:
      - rengine_net
    links:
      - zookeeper
      - kafka
      - hbase # for saving raw events history to HBase
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "8081:8081"

volumes:
  mongodb_data:
    driver: local
  minio_data:
    driver: local
  redis-cluster_data-0:
    driver: local
  redis-cluster_data-1:
    driver: local
  redis-cluster_data-2:
    driver: local
  redis-cluster_data-3:
    driver: local
  redis-cluster_data-4:
    driver: local
  redis-cluster_data-5:
    driver: local
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  hbase_data:
    driver: local
  rengine_script_rootfs:
    driver: local
  rengine_script_works:
    driver: local
  rengine_script_log:
    driver: local
