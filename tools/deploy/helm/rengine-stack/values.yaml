# Copyright (c) 2017 ~ 2025, the original author James Wong individual Inc,
# All rights reserved. Contact us <jameswong1376@gmail.com>
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# This parent charts will override the value of child charts.
# see:https://github.com/whmzsu/helm-doc-zh-cn/blob/master/chart_template_guide/subcharts_and_globals-zh_cn.md

## ---------------------------------------- APP Configuration. ----------------------------------------
## This is the spec definition of application instance deployed in Kubernetes.
apiserver:
  enabled: true
  image:
    repository: wl4g/rengine-apiserver
    baselineTag: 1.0.0
    #upgradeTag: latest

  command: []

  preStartScript: ""

  envConfigs:
    APP_DEBUG: yes

  agentConfigs:
    mountPath: ""
    items: {}

  appConfigs:
    mountPath: ""
    items: {}

  governance:
    istio:
      ingress:
        customHosts:
        - api.rengine.io

controller:
  enabled: false
  image:
    repository: wl4g/rengine-controller
    baselineTag: 1.0.0
    #upgradeTag: latest

  command: []

  preStartScript: ""

  envConfigs: {}

  agentConfigs:
    mountPath: ""
    items: {}

  appConfigs:
    mountPath: ""
    items: {}

  governance:
    istio:
      ingress:
        customHosts:
        - controller.rengine.io

executor:
  enabled: true
  image:
    repository: wl4g/rengine-executor-native
    baselineTag: 1.0.0
    #upgradeTag: latest

  #command: ["/work/application", "-Dquarkus.http.host=0.0.0.0"]
  command: []

  preStartScript: ""

  envConfigs: {}

  agentConfigs:
    mountPath: ""
    items: {}

  appConfigs:
    mountPath: ""
    items: {}

  governance:
    istio:
      ingress:
        customHosts:
        - executor.rengine.io

ui:
  enabled: true
  image:
    repository: wl4g/rengine-ui
    baselineTag: 1.0.0
    #upgradeTag: latest

  # command: ["sh", "-c", "ls -al /var/run/"]
  command: []

  envConfigs: {}

  agentConfigs:
    mountPath: "/etc/nginx/"
    items:
      nginx.conf: |-
        user  1001;
        worker_processes  auto;
        error_log  /var/log/nginx/error.log notice;
        pid        /var/run/nginx.pid;
        events {
            worker_connections  1024;
        }
        http {
            include       /etc/nginx/mime.types;
            default_type  application/octet-stream;
            log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                              '$status $body_bytes_sent "$http_referer" '
                              '"$http_user_agent" "$http_x_forwarded_for"';
            access_log  /var/log/nginx/access.log  main;
            sendfile           on;
            #tcp_nopush        on;
            keepalive_timeout  65;
            gzip  on;
            include /etc/nginx/conf.d/*.conf;
        }

  appConfigs:
    mountPath: "/etc/nginx/conf.d/"
    items:
      rengine-ui.conf: |-
        upstream apiserver_cluster {
          server rengine-apiserver.rengine.svc.cluster.local:28001;
        }
        log_format  rengineuilog  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $bytes_sent $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$upstream_addr $host $sent_http_x_reqid $upstream_response_time $request_time';
        server {
          listen 8080;
          server_name  console.rengine.io;
          access_log  /var/log/nginx/access.log;
          error_log   /var/log/nginx/error.log;
          client_max_body_size 512m;
          proxy_send_timeout 500s;
          proxy_read_timeout 500s;
          location ~ /api {
            proxy_pass http://apiserver_cluster;
            proxy_set_header Host $host;
            proxy_set_header Referer $http_referer;
          }
          location / {
            root /usr/share/nginx/html/rengine-ui;
            index index.html index.htm;
          }
        }

  governance:
    istio:
      ingress:
        customHosts:
        - console.rengine.io

global:
  ## ------------------------------- Common Configuration. ----------------------------------------------
  commonConfigs:
    command: []

    ##
    ## This is a script pre-start hook that is automatically executed before starting the container and
    ## can be used to customize the pre-launch actions (such as setup environments, etc.)
    ##
    ## Tip: The advantage of the following pre-start hook script mechanism is that it is more flexible
    ## than directly mounting the configuration through configmap+volume. For example, it cannot control
    ## the order of exporting environment variables, that is, variable evaluation cannot be used,
    ## such as export A=123; export B="${A}"
    ##
    #preStartScript: |-
    #  #!/bin/sh
    #  ## see:./service/src/main/resources/application-telemetry.yaml
    #  export SPRING_SLEUTH_OTEL_EXPORTER_OTLP_ENDPOENT="http://otlp-collector.otlp.svc.cluster.local:4317"
    #  export SPRING_SLEUTH_OTEL_EXPORTER_JAEGER_ENDPOENT="http://jaeger-collector.jaeger.svc.cluster.local:14250"
    #  ##
    #  ## see:./service/src/main/resources/application-mongo.yaml
    #  export SPRING_DATA_MONGODB_URI="mongodb://rengine-mongodb:27017/rengine"
    #  ##
    #  ## see:./service/src/main/resources/application-redis.yaml
    #  export SPRING_REDIS_CLUSTER_NODES="\
    #    rengine-redis-cluster-0.rengine-redis-cluster-headless:6379,\
    #    rengine-redis-cluster-1.rengine-redis-cluster-headless:6379,\
    #    rengine-redis-cluster-2.rengine-redis-cluster-headless:6379,\
    #    rengine-redis-cluster-3.rengine-redis-cluster-headless:6379,\
    #    rengine-redis-cluster-4.rengine-redis-cluster-headless:6379,\
    #    rengine-redis-cluster-5.rengine-redis-cluster-headless:6379"
    #  export SPRING_REDIS_CLUSTER_USERNAME="default"
    #  export SPRING_REDIS_CLUSTER_PASSWORD="changeme"
    #  ##
    #  ## see:./controller/src/main/resources/application-controller.yaml
    #  export RENGINE_CONTROLLER_ZOOKEEPER_SERVER_LISTS="rengine-zookeeper:2181"
    #  ##
    #  ## see:./executor/src/main/resources/application.yaml and ./service/src/main/resources/application-minio.yaml
    #  export MINIO_ENDPOINT="http://rengine-minio:9000"
    #  export MINIO_ACCESS_KEY="rengine"
    #  export MINIO_SECRET_KEY="changeme"
    #  ##
    #  ## see:./executor/src/main/resources/application.yaml
    #  export QUARKUS_MONGODB_CONNECTION_STRING="${SPRING_DATA_MONGODB_URI}"
    #  export QUARKUS_REDIS_PASSWORD="${SPRING_REDIS_CLUSTER_PASSWORD}"
    #  export QUARKUS_REDIS_HOSTS="$(echo $SPRING_REDIS_CLUSTER_NODES | sed 's#,#,redis://#g')"
    #  export QUARKUS_LOG_FILE_PATH="/tmp/executor.log"

    envConfigs:
      ##
      ## see:./service/src/main/resources/application-telemetry.yaml
      ##
      SPRING_SLEUTH_OTEL_EXPORTER_OTLP_ENDPOENT: "http://otlp-collector.otlp.svc.cluster.local:4317"
      SPRING_SLEUTH_OTEL_EXPORTER_JAEGER_ENDPOENT: "http://jaeger-collector.jaeger.svc.cluster.local:14250"
      ## see:./service/src/main/resources/application-mongo.yaml
      #SPRING_DATA_MONGODB_URI: "mongodb://root:changeme@rengine-mongodb:27017/rengine" # ???
      SPRING_DATA_MONGODB_URI: "mongodb://rengine-mongodb:27017/rengine"
      ## see:./service/src/main/resources/application-redis.yaml
      #SPRING_REDIS_USERNAME: "default"
      SPRING_REDIS_PASSWORD: "changeme"
      SPRING_REDIS_CLUSTER_NODES: "\
        rengine-redis-cluster-0.rengine-redis-cluster-headless:6379,\
        rengine-redis-cluster-1.rengine-redis-cluster-headless:6379,\
        rengine-redis-cluster-2.rengine-redis-cluster-headless:6379,\
        rengine-redis-cluster-3.rengine-redis-cluster-headless:6379,\
        rengine-redis-cluster-4.rengine-redis-cluster-headless:6379,\
        rengine-redis-cluster-5.rengine-redis-cluster-headless:6379"
      ##
      ## see:./controller/src/main/resources/application-controller.yaml
      ##
      RENGINE_CONTROLLER_ZOOKEEPER_SERVER_LISTS: "rengine-zookeeper:2181"
      ## see:./executor/src/main/resources/application.yaml
      QUARKUS_MONGODB_CONNECTION_STRING: "mongodb://rengine-mongodb:27017/rengine"
      QUARKUS_REDIS_PASSWORD: "changeme"
      QUARKUS_REDIS_HOSTS: "\
        redis://rengine-redis-cluster-0.rengine-redis-cluster-headless:6379,\
        redis://rengine-redis-cluster-1.rengine-redis-cluster-headless:6379,\
        redis://rengine-redis-cluster-2.rengine-redis-cluster-headless:6379,\
        redis://rengine-redis-cluster-3.rengine-redis-cluster-headless:6379,\
        redis://rengine-redis-cluster-4.rengine-redis-cluster-headless:6379,\
        redis://rengine-redis-cluster-5.rengine-redis-cluster-headless:6379"
      QUARKUS_LOG_FILE_PATH: "/tmp/executor.log"
      ##
      ## see:./executor/src/main/resources/application.yaml and ./service/src/main/resources/application-minio.yaml
      ##
      MINIO_ENDPOINT: "http://rengine-minio:9000"
      MINIO_ACCESS_KEY: "rengine"
      MINIO_SECRET_KEY: "changeme"

    agentConfigs:
      mountPath: ""
      items: {}

    appConfigs:
      mountPath: ""
      items: {}

  ## ------------------------------- Component Configuration. ----------------------------------------------
  ##
  ## The following are the global public dependent components examples configuration, which support the internal
  ## components that are automatically deployed using the current charts, or the services deployed in the VM 
  ## externally using Kubernetes (such as MySQL/MongoDB/HBase services for high performance, etc.)
  ##
  ## Notice: Automatic deployment is disabled by default for all components, you can partially enable it
  ## according to actual needs.
  ##
  componentServices:
    ## see:https://open-telemetry.github.io/opentelemetry-helm-charts
    otlp:
      internal:
        enabled: false
      external:
        enabled: false
        namespace:
        serviceAccount:
        labels:
          classify: external-service
          version: v1
        ## endpoint example: http://10.0.0.114:4318/api/traces
        instancePorts:
        - protocol: TCP
          targetPort: 4318
        instanceAddresses:
        - ip: 10.0.0.114
          hosts:
          - localhost.local
        location: MESH_EXTERNAL
        resolution: NONE

    ## see:https://jaegertracing.github.io/helm-charts/
    jaeger:
      internal:
        enabled: false
        # operatorEnabled: false
      external:
        enabled: false
        namespace:
        serviceAccount:
        labels:
          classify: external-service
          version: v1
        ## endpoint example: http://10.0.0.114:14268/api/traces
        instancePorts:
        - protocol: TCP
          targetPort: 14268
        instanceAddresses:
        - ip: 10.0.0.114
          hosts:
          - localhost.local
        location: MESH_EXTERNAL
        resolution: NONE

    ## see:https://bitnami.com/stack/zookeeper/helm
    zookeeper:
      internal:
        enabled: true
      external:
        enabled: false
        namespace:
        serviceAccount:
        labels:
          classify: external-service
          version: v1
        instancePorts:
        - protocol: TCP
          targetPort: 2181
        instanceAddresses:
        - ip: 172.24.47.1
          hosts:
          - rengine-zookeeper-1
        - ip: 172.24.47.2
          hosts:
          - rengine-zookeeper-2
        - ip: 172.24.47.3
          hosts:
          - rengine-zookeeper-3
        location: MESH_EXTERNAL
        resolution: NONE

    ## see:https://bitnami.com/stack/kafka/helm
    kafka:
      internal:
        enabled: false
      external:
        enabled: false
        namespace:
        serviceAccount:
        labels:
          classify: external-service
          version: v1
        instancePorts:
        - protocol: TCP
          targetPort: 9092
        instanceAddresses:
        - ip: 172.24.47.1
          hosts:
          - rengine-kafka-1
        - ip: 172.24.47.2
          hosts:
          - rengine-kafka-2
        - ip: 172.24.47.3
          hosts:
          - rengine-kafka-3
        location: MESH_EXTERNAL
        resolution: NONE

    ## see:https://github.com/wl4g/shardingproxy
    ## see:https://bitnami.com/stack/mysql/helm
    #mysql:
    #  internal:
    #    enabled: false
    #  external:
    #    enabled: false
    #    namespace:
    #    serviceAccount:
    #    labels:
    #      classify: external-service
    #      version: v1
    #    instancePorts:
    #    - protocol: TCP
    #      targetPort: 3308 ## Native default: 3306
    #    instanceAddresses:
    #    - ip: 172.24.47.1
    #      hosts:
    #      - rengine-mysql-1
    #    - ip: 172.24.47.2
    #      hosts:
    #      - rengine-mysql-2
    #    - ip: 172.24.47.3
    #      hosts:
    #      - rengine-mysql-2
    #    location: MESH_EXTERNAL
    #    resolution: NONE

    ## see:https://bitnami.com/stack/redis/helm
    # redis:
    #   internal:
    #     enabled: false
    #   external:
    #     enabled: false
    #     namespace:
    #     serviceAccount:
    #     labels:
    #       classify: external-service
    #       version: v1
    #     instancePorts:
    #     - protocol: TCP
    #       targetPort: 6379
    #     - protocol: TCP
    #       targetPort: 6380
    #     - protocol: TCP
    #       targetPort: 6381
    #     instanceAddresses:
    #     - ip: 172.24.47.1
    #       hosts:
    #       - rengine-redis-0
    #     - ip: 172.24.47.2
    #       hosts:
    #       - rengine-redis-1
    #     location: MESH_EXTERNAL
    #     resolution: NONE

    ## see:https://bitnami.com/stack/redis-cluster/helm
    redis-cluster:
      internal:
        enabled: true
      external:
        enabled: false
        namespace:
        serviceAccount:
        labels:
          classify: external-service
          version: v1
        instancePorts:
        - protocol: TCP
          targetPort: 6379
        - protocol: TCP
          targetPort: 6380
        - protocol: TCP
          targetPort: 6381
        instanceAddresses:
        - ip: 172.24.47.1
          hosts:
          - rengine-redis-cluster-0
        - ip: 172.24.47.2
          hosts:
          - rengine-redis-cluster-1
        - ip: 172.24.47.3
          hosts:
          - rengine-redis-cluster-2
        - ip: 172.24.47.4
          hosts:
          - rengine-redis-cluster-3
        - ip: 172.24.47.5
          hosts:
          - rengine-redis-cluster-4
        - ip: 172.24.47.6
          hosts:
          - rengine-redis-cluster-5
        location: MESH_EXTERNAL
        resolution: NONE

    ## see:https://bitnami.com/stack/minio/helm
    minio:
      internal:
        enabled: true
      external:
        enabled: false
        namespace:
        serviceAccount:
        labels:
          classify: external-service
          version: v1
        instancePorts:
        - protocol: TCP
          targetPort: 9000
        - protocol: TCP
          targetPort: 9090
        instanceAddresses:
        - ip: 172.24.47.6
          hosts:
          - rengine-minio-1
        - ip: 172.24.47.7
          hosts:
          - rengine-minio-2
        - ip: 172.24.47.8
          hosts:
          - rengine-minio-3
        location: MESH_EXTERNAL
        resolution: NONE

    ## see:https://bitnami.com/stack/mongodb/helm
    mongodb:
      internal:
        enabled: true
      external:
        enabled: false
        namespace:
        serviceAccount:
        labels:
          classify: external-service
          version: v1
        instancePorts:
        - protocol: TCP
          targetPort: 27017
        instanceAddresses:
        - ip: 172.24.47.6
          hosts:
          - rengine-mongodb
        location: MESH_EXTERNAL
        resolution: NONE

    ## see:https://bitnami.com/stack/mongodb-sharded/helm
    mongodb-sharded:
      internal:
        enabled: false
      external:
        enabled: false
        namespace:
        serviceAccount:
        labels:
          classify: external-service
          version: v1
        instancePorts:
        - protocol: TCP
          targetPort: 27017
        instanceAddresses:
        - ip: 172.24.47.6
          hosts:
          - rengine-mongodb-1
        - ip: 172.24.47.7
          hosts:
          - rengine-mongodb-2
        - ip: 172.24.47.8
          hosts:
          - rengine-mongodb-3
        location: MESH_EXTERNAL
        resolution: NONE

    #hmaster:
    #  internal:
    #    enabled: false
    #  external:
    #    enabled: false
    #    namespace:
    #    serviceAccount:
    #    labels:
    #      classify: external-service
    #      version: v1
    #    instancePorts:
    #    - protocol: TCP
    #      targetPort: 16000
    #    - protocol: TCP
    #      targetPort: 16010
    #    instanceAddresses:
    #    - ip: 172.24.47.4
    #      hosts:
    #      - emr-master-1
    #    - ip: 172.24.47.5
    #      hosts:
    #      - emr-master-2
    #    location: MESH_EXTERNAL
    #    resolution: NONE

    #hregionserver:
    #  internal:
    #    enabled: false
    #  external:
    #    enabled: false
    #    namespace:
    #    serviceAccount:
    #    labels:
    #      classify: external-service
    #      version: v1
    #    instancePorts:
    #    - protocol: TCP
    #      targetPort: 16020
    #    - protocol: TCP
    #      targetPort: 16030
    #    instanceAddresses:
    #    - ip: 172.24.47.6
    #      hosts:
    #      - emr-worker-1
    #    - ip: 172.24.47.7
    #      hosts:
    #      - emr-worker-2
    #    - ip: 172.24.47.8
    #      hosts:
    #      - emr-worker-3
    #    location: MESH_EXTERNAL
    #    resolution: NONE

    #namenode:
    #  internal:
    #    enabled: false
    #  external:
    #    enabled: false
    #    namespace:
    #    serviceAccount:
    #    labels:
    #      classify: external-service
    #      version: v1
    #    instancePorts:
    #    - protocol: TCP
    #      targetPort: 9870
    #    - protocol: TCP
    #      targetPort: 8020
    #    - protocol: TCP
    #      targetPort: 8022
    #    instanceAddresses:
    #    - ip: 172.24.47.4
    #      hosts:
    #      - emr-master-1
    #    - ip: 172.24.47.5
    #      hosts:
    #      - emr-master-2
    #    location: MESH_EXTERNAL
    #    resolution: NONE

    #nodemanager:
    #  internal:
    #    enabled: false
    #  external:
    #    enabled: false
    #    namespace:
    #    serviceAccount:
    #    labels:
    #      classify: external-service
    #      version: v1
    #    instancePorts:
    #    - protocol: TCP
    #      targetPort: 8040
    #    - protocol: TCP
    #      targetPort: 8041
    #    - protocol: TCP
    #      targetPort: 7337
    #    - protocol: TCP
    #      targetPort: 8042
    #    - protocol: TCP
    #      targetPort: 13562
    #    instanceAddresses:
    #    - ip: 172.24.47.6
    #      hosts:
    #      - emr-worker-1
    #    - ip: 172.24.47.7
    #      hosts:
    #      - emr-worker-2
    #    - ip: 172.24.47.8
    #      hosts:
    #      - emr-worker-3
    #    location: MESH_EXTERNAL
    #    resolution: NONE

    #datanode:
    #  internal:
    #    enabled: false
    #  external:
    #    enabled: false
    #    namespace:
    #    serviceAccount:
    #    labels:
    #      classify: external-service
    #      version: v1
    #    instancePorts:
    #    - protocol: TCP
    #      targetPort: 9867
    #    - protocol: TCP
    #      targetPort: 9864
    #    - protocol: TCP
    #      targetPort: 9866
    #    - protocol: TCP
    #      targetPort: 32828
    #    instanceAddresses:
    #    - ip: 172.24.47.6
    #      hosts:
    #      - emr-worker-1
    #    - ip: 172.24.47.7
    #      hosts:
    #      - emr-worker-2
    #    - ip: 172.24.47.8
    #      hosts:
    #      - emr-worker-3
    #    location: MESH_EXTERNAL
    #    resolution: NONE

## ------------------------------- (Internal) Jaeger Configuration. ----------------------------------
## see:https://github.com/bitnami/charts/tree/main/bitnami/mongodb
jaeger:
  allInOne:
    enabled: true
  storage:
    type: "" ## cassandra,elasticsearch
  #   cassandra:
  #     host: cassandra
  #     port: 9042
  #     tls:
  #       enabled: false
  #     user: admin
  #     usePassword: true
  #     password: changeme
  #   elasticsearch:
  #     scheme: http
  #     host: elasticsearch-master
  #     port: 9200
  #     user: elastic
  #     usePassword: true
  #     password: changeme
  #   kafka:
  #     brokers:
  #       - kafka:9092
  #     topic: jaegerv1data
  #     authentication: none

## ------------------------------- (Internal) MongoDB Configuration. ----------------------------------
## see:https://github.com/bitnami/charts/tree/main/bitnami/mongodb
mongodb:
  initContainers:
    ## Initializing rengine database scripts.
    - name: rengine-init-mongodb
      image: busybox:1.28
      imagePullPolicy: IfNotPresent
      command:
        - wget
        - "-O"
        - "/docker-entrypoint-initdb.d/rengine_init.js"
        - https://raw.githubusercontent.com/wl4g/rengine/master/tools/db/rengine_init.js?token=GHSAT0AAAAAAB4ATLINKSZ7RSHXRT6IJ674ZCCD6XA
      volumeMounts:
        - name: initdir
          mountPath: "/docker-entrypoint-initdb.d/"

  extraVolumeMounts:
    - name: initdir
      mountPath: "/docker-entrypoint-initdb.d/rengine_init.js"

  extraVolumes:
    - name: initdir
      emptyDir: {}

  auth:
    enabled: false
    rootUser: root
    rootPassword: "changeme"
    # databases:
    #   - "rengine"
    # usernames:
    #   - rengine
    # passwords:
    #   - "changeme"

## ------------------------------- (Internal) MongoDB sharded Configuration. ----------------------------------
## see:https://github.com/bitnami/charts/tree/main/bitnami/mongodb
mongodb-sharded:
  diagnosticMode:
    enabled: false
  mongos:
    replicaCount: 1
  configsvr:
    replicaCount: 1
  shardsvr:
    dataNode:
      replicaCount: 1
    arbiter:
      replicaCount: 0
  shards: 2
  metrics:
    enabled: true
  auth:
    enabled: true
    rootUser: root
    rootPassword: "changeme"

## ------------------------------- (Internal) Redis Configuration. ----------------------------------
## see:https://github.com/bitnami/charts/tree/main/bitnami/redis
# redis:
#   architecture: replication
#   commonConfiguration: |-
#     appendonly yes
#     save ""
#   auth:
#     enabled: true
#     sentinel: false
#     rootPassword: "changeme"
#   master:
#     count: 1
#     disableCommands: ["FLUSHDB","FLUSHALL"]
#     configuration: ""
#   replica:
#     replicaCount: 1
#     configuration: ""
#   sentinel:
#     enabled: false
#   metrics:
#     enabled: true

## ------------------------------- (Internal) Redis Cluster Configuration. ----------------------------------
## see:https://github.com/bitnami/charts/tree/main/bitnami/redis-cluster
redis-cluster:
  diagnosticMode:
    enabled: false
  usePassword: true
  password: "changeme"
  redis:
    useAOFPersistence: "yes"
  cluster:
    nodes: 6
    replicas: 1
    externalAccess:
      enabled: false
  metrics:
    enabled: true

## ------------------------------- (Internal) MinIO Configuration. ------------------------------------
## see:https://github.com/bitnami/charts/tree/main/bitnami/minio
minio:
  auth:
    rootUser: "minioadmin"
    rootPassword: "minioadmin"
  # gateway:
  #   enabled: false
  #   type: s3 ## gcs,nas,s3
  #   replicaCount: 1
  #   s3:
  #     accessKey: ""
  #     secretKey: ""
  #     serviceEndpoint: ""

## ------------------------------- (Internal) Zookeeper Configuration. --------------------------------
## see:https://github.com/bitnami/charts/tree/main/bitnami/zookeeper
zookeeper:
  replicaCount: 3
  pdb:
    minAvailable: 2
    maxUnavailable: 1
