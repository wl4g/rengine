# Copyright (c) 2017 ~ 2025, the original author wangl.sir individual Inc,
# All rights reserved. Contact us <Wanglsir@gmail.com, 983708408@qq.com>
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
# #### Environment Security configuration. ####
#
#
# @Deprecated The implemented with custom repository. see:com.wl4g.rengine.service.security.MongoClientRegistrationRepository
#
# Using Spring Security built-in oauth2 endpoint.
# see:org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter
# e.g: localhost:28001/oauth2/authorization/iam ->
# https://iam.xx.com/realms/master/protocol/openid-connect/auth?response_type=code&client_id=rengine&scope=email%20profile%20roles&state=PDZJDK3n6oGtUhq_rISUCrtiPJx4U90LXc96e5x1sIs%3D&redirect_uri=http://localhost:28001/login/oauth2/code/iam
# see:org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter
#spring:
#  security:
#    ## Builtin start for oauth api: /oauth2/authorization/{registrationId}
#    ## see:https://github.com/spring-projects/spring-security/blob/5.7.x/config/src/main/java/org/springframework/security/config/http/OAuth2LoginBeanDefinitionParser.java#L78
#    ## see:org.springframework.security.config.oauth2.client.ClientRegistrationsBeanDefinitionParser
#    ## see:org.springframework.security.oauth2.client.oidc.authentication.OidcAuthorizationCodeAuthenticationProvider
#    oauth2:
#      resourceserver:
#        jwt:
#          issuer-uri: ${IAM_ENDPOINT:https://iam.wl4g.com}/realms/${IAM_REALMS:master}
#          jwk-set-uri: ${IAM_ENDPOINT:https://iam.wl4g.com}/realms/${IAM_REALMS:master}/protocol/openid-connect/certs
#      client:
#        provider:
#          rengine-oidc:
#            ## see:https://iam.xx.com/realms/master/.well-known/openid-configuration
#            issuer-uri: ${IAM_ENDPOINT:https://iam.wl4g.com}/realms/${IAM_REALMS:master}
#        ## see:org.springframework.security.config.oauth2.client.ClientRegistrationsBeanDefinitionParser
#        registration:
#          iam:
#            provider: rengine-oidc
#            client-id: ${IAM_CLIENT_ID:rengine}
#            client-secret: ${IAM_CLIENT_SECRET:FvLNs0sbwF3sN4BbyjZ5GBwN819QFCmF}
#            client-name: Rengine OIDC Client
#            ## see:org.springframework.security.oauth2.core.AuthorizationGrantType
#            ## see:https://tools.ietf.org/html/rfc6749#section-1.3
#            authorization-grant-type: authorization_code # authorization_code,refresh_token,implicit,client_credentials
#            scope:
#              - email
#              - profile
#              - roles
