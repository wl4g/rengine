/*
 * Flink JobManager REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1/1.15-SNAPSHOT
 * Contact: user@flink.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.nextbreakpoint.flinkclient1_15.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * JobExceptionsInfoWithHistory
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen",
        date = "2023-04-02T23:14:46.617621+08:00[Asia/Shanghai]")
public class JobExceptionsInfoWithHistory {
    @SerializedName("root-exception")
    private String rootException = null;

    @SerializedName("timestamp")
    private Long timestamp = null;

    @SerializedName("all-exceptions")
    private List<ExecutionExceptionInfo> allExceptions = null;

    @SerializedName("truncated")
    private Boolean truncated = null;

    @SerializedName("exceptionHistory")
    private JobExceptionHistory exceptionHistory = null;

    public JobExceptionsInfoWithHistory rootException(String rootException) {
        this.rootException = rootException;
        return this;
    }

    /**
     * Get rootException
     * 
     * @return rootException
     **/
    @Schema(description = "")
    public String getRootException() {
        return rootException;
    }

    public void setRootException(String rootException) {
        this.rootException = rootException;
    }

    public JobExceptionsInfoWithHistory timestamp(Long timestamp) {
        this.timestamp = timestamp;
        return this;
    }

    /**
     * Get timestamp
     * 
     * @return timestamp
     **/
    @Schema(description = "")
    public Long getTimestamp() {
        return timestamp;
    }

    public void setTimestamp(Long timestamp) {
        this.timestamp = timestamp;
    }

    public JobExceptionsInfoWithHistory allExceptions(List<ExecutionExceptionInfo> allExceptions) {
        this.allExceptions = allExceptions;
        return this;
    }

    public JobExceptionsInfoWithHistory addAllExceptionsItem(ExecutionExceptionInfo allExceptionsItem) {
        if (this.allExceptions == null) {
            this.allExceptions = new ArrayList<ExecutionExceptionInfo>();
        }
        this.allExceptions.add(allExceptionsItem);
        return this;
    }

    /**
     * Get allExceptions
     * 
     * @return allExceptions
     **/
    @Schema(description = "")
    public List<ExecutionExceptionInfo> getAllExceptions() {
        return allExceptions;
    }

    public void setAllExceptions(List<ExecutionExceptionInfo> allExceptions) {
        this.allExceptions = allExceptions;
    }

    public JobExceptionsInfoWithHistory truncated(Boolean truncated) {
        this.truncated = truncated;
        return this;
    }

    /**
     * Get truncated
     * 
     * @return truncated
     **/
    @Schema(description = "")
    public Boolean isTruncated() {
        return truncated;
    }

    public void setTruncated(Boolean truncated) {
        this.truncated = truncated;
    }

    public JobExceptionsInfoWithHistory exceptionHistory(JobExceptionHistory exceptionHistory) {
        this.exceptionHistory = exceptionHistory;
        return this;
    }

    /**
     * Get exceptionHistory
     * 
     * @return exceptionHistory
     **/
    @Schema(description = "")
    public JobExceptionHistory getExceptionHistory() {
        return exceptionHistory;
    }

    public void setExceptionHistory(JobExceptionHistory exceptionHistory) {
        this.exceptionHistory = exceptionHistory;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        JobExceptionsInfoWithHistory jobExceptionsInfoWithHistory = (JobExceptionsInfoWithHistory) o;
        return Objects.equals(this.rootException, jobExceptionsInfoWithHistory.rootException)
                && Objects.equals(this.timestamp, jobExceptionsInfoWithHistory.timestamp)
                && Objects.equals(this.allExceptions, jobExceptionsInfoWithHistory.allExceptions)
                && Objects.equals(this.truncated, jobExceptionsInfoWithHistory.truncated)
                && Objects.equals(this.exceptionHistory, jobExceptionsInfoWithHistory.exceptionHistory);
    }

    @Override
    public int hashCode() {
        return Objects.hash(rootException, timestamp, allExceptions, truncated, exceptionHistory);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class JobExceptionsInfoWithHistory {\n");

        sb.append("    rootException: ").append(toIndentedString(rootException)).append("\n");
        sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
        sb.append("    allExceptions: ").append(toIndentedString(allExceptions)).append("\n");
        sb.append("    truncated: ").append(toIndentedString(truncated)).append("\n");
        sb.append("    exceptionHistory: ").append(toIndentedString(exceptionHistory)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
