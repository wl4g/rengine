/*
 * Flink JobManager REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1/1.15-SNAPSHOT
 * Contact: user@flink.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.nextbreakpoint.flinkclient1_15.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Counts
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen",
        date = "2023-04-02T23:14:46.617621+08:00[Asia/Shanghai]")
public class Counts {
    @SerializedName("restored")
    private Long restored = null;

    @SerializedName("total")
    private Long total = null;

    @SerializedName("in_progress")
    private Integer inProgress = null;

    @SerializedName("completed")
    private Long completed = null;

    @SerializedName("failed")
    private Long failed = null;

    public Counts restored(Long restored) {
        this.restored = restored;
        return this;
    }

    /**
     * Get restored
     * 
     * @return restored
     **/
    @Schema(description = "")
    public Long getRestored() {
        return restored;
    }

    public void setRestored(Long restored) {
        this.restored = restored;
    }

    public Counts total(Long total) {
        this.total = total;
        return this;
    }

    /**
     * Get total
     * 
     * @return total
     **/
    @Schema(description = "")
    public Long getTotal() {
        return total;
    }

    public void setTotal(Long total) {
        this.total = total;
    }

    public Counts inProgress(Integer inProgress) {
        this.inProgress = inProgress;
        return this;
    }

    /**
     * Get inProgress
     * 
     * @return inProgress
     **/
    @Schema(description = "")
    public Integer getInProgress() {
        return inProgress;
    }

    public void setInProgress(Integer inProgress) {
        this.inProgress = inProgress;
    }

    public Counts completed(Long completed) {
        this.completed = completed;
        return this;
    }

    /**
     * Get completed
     * 
     * @return completed
     **/
    @Schema(description = "")
    public Long getCompleted() {
        return completed;
    }

    public void setCompleted(Long completed) {
        this.completed = completed;
    }

    public Counts failed(Long failed) {
        this.failed = failed;
        return this;
    }

    /**
     * Get failed
     * 
     * @return failed
     **/
    @Schema(description = "")
    public Long getFailed() {
        return failed;
    }

    public void setFailed(Long failed) {
        this.failed = failed;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Counts counts = (Counts) o;
        return Objects.equals(this.restored, counts.restored) && Objects.equals(this.total, counts.total)
                && Objects.equals(this.inProgress, counts.inProgress) && Objects.equals(this.completed, counts.completed)
                && Objects.equals(this.failed, counts.failed);
    }

    @Override
    public int hashCode() {
        return Objects.hash(restored, total, inProgress, completed, failed);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Counts {\n");

        sb.append("    restored: ").append(toIndentedString(restored)).append("\n");
        sb.append("    total: ").append(toIndentedString(total)).append("\n");
        sb.append("    inProgress: ").append(toIndentedString(inProgress)).append("\n");
        sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
        sb.append("    failed: ").append(toIndentedString(failed)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
