/*
 * Flink JobManager REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1/1.15-SNAPSHOT
 * Contact: user@flink.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.nextbreakpoint.flinkclient1_15.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * CheckpointingStatistics
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen",
        date = "2023-04-02T23:14:46.617621+08:00[Asia/Shanghai]")
public class CheckpointingStatistics {
    @SerializedName("counts")
    private Counts counts = null;

    @SerializedName("summary")
    private Summary summary = null;

    @SerializedName("latest")
    private LatestCheckpoints latest = null;

    @SerializedName("history")
    private List<CheckpointStatistics> history = null;

    public CheckpointingStatistics counts(Counts counts) {
        this.counts = counts;
        return this;
    }

    /**
     * Get counts
     * 
     * @return counts
     **/
    @Schema(description = "")
    public Counts getCounts() {
        return counts;
    }

    public void setCounts(Counts counts) {
        this.counts = counts;
    }

    public CheckpointingStatistics summary(Summary summary) {
        this.summary = summary;
        return this;
    }

    /**
     * Get summary
     * 
     * @return summary
     **/
    @Schema(description = "")
    public Summary getSummary() {
        return summary;
    }

    public void setSummary(Summary summary) {
        this.summary = summary;
    }

    public CheckpointingStatistics latest(LatestCheckpoints latest) {
        this.latest = latest;
        return this;
    }

    /**
     * Get latest
     * 
     * @return latest
     **/
    @Schema(description = "")
    public LatestCheckpoints getLatest() {
        return latest;
    }

    public void setLatest(LatestCheckpoints latest) {
        this.latest = latest;
    }

    public CheckpointingStatistics history(List<CheckpointStatistics> history) {
        this.history = history;
        return this;
    }

    public CheckpointingStatistics addHistoryItem(CheckpointStatistics historyItem) {
        if (this.history == null) {
            this.history = new ArrayList<CheckpointStatistics>();
        }
        this.history.add(historyItem);
        return this;
    }

    /**
     * Get history
     * 
     * @return history
     **/
    @Schema(description = "")
    public List<CheckpointStatistics> getHistory() {
        return history;
    }

    public void setHistory(List<CheckpointStatistics> history) {
        this.history = history;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CheckpointingStatistics checkpointingStatistics = (CheckpointingStatistics) o;
        return Objects.equals(this.counts, checkpointingStatistics.counts)
                && Objects.equals(this.summary, checkpointingStatistics.summary)
                && Objects.equals(this.latest, checkpointingStatistics.latest)
                && Objects.equals(this.history, checkpointingStatistics.history);
    }

    @Override
    public int hashCode() {
        return Objects.hash(counts, summary, latest, history);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CheckpointingStatistics {\n");

        sb.append("    counts: ").append(toIndentedString(counts)).append("\n");
        sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
        sb.append("    latest: ").append(toIndentedString(latest)).append("\n");
        sb.append("    history: ").append(toIndentedString(history)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
