/*
 * Flink JobManager REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1/1.15-SNAPSHOT
 * Contact: user@flink.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.nextbreakpoint.flinkclient1_15.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * JobAccumulatorsInfo
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen",
        date = "2023-04-02T23:14:46.617621+08:00[Asia/Shanghai]")
public class JobAccumulatorsInfo {
    @SerializedName("job-accumulators")
    private List<JobAccumulator> jobAccumulators = null;

    @SerializedName("user-task-accumulators")
    private List<UserTaskAccumulator> userTaskAccumulators = null;

    @SerializedName("serialized-user-task-accumulators")
    private Map<String, SerializedValueOptionalFailureObject> serializedUserTaskAccumulators = null;

    public JobAccumulatorsInfo jobAccumulators(List<JobAccumulator> jobAccumulators) {
        this.jobAccumulators = jobAccumulators;
        return this;
    }

    public JobAccumulatorsInfo addJobAccumulatorsItem(JobAccumulator jobAccumulatorsItem) {
        if (this.jobAccumulators == null) {
            this.jobAccumulators = new ArrayList<JobAccumulator>();
        }
        this.jobAccumulators.add(jobAccumulatorsItem);
        return this;
    }

    /**
     * Get jobAccumulators
     * 
     * @return jobAccumulators
     **/
    @Schema(description = "")
    public List<JobAccumulator> getJobAccumulators() {
        return jobAccumulators;
    }

    public void setJobAccumulators(List<JobAccumulator> jobAccumulators) {
        this.jobAccumulators = jobAccumulators;
    }

    public JobAccumulatorsInfo userTaskAccumulators(List<UserTaskAccumulator> userTaskAccumulators) {
        this.userTaskAccumulators = userTaskAccumulators;
        return this;
    }

    public JobAccumulatorsInfo addUserTaskAccumulatorsItem(UserTaskAccumulator userTaskAccumulatorsItem) {
        if (this.userTaskAccumulators == null) {
            this.userTaskAccumulators = new ArrayList<UserTaskAccumulator>();
        }
        this.userTaskAccumulators.add(userTaskAccumulatorsItem);
        return this;
    }

    /**
     * Get userTaskAccumulators
     * 
     * @return userTaskAccumulators
     **/
    @Schema(description = "")
    public List<UserTaskAccumulator> getUserTaskAccumulators() {
        return userTaskAccumulators;
    }

    public void setUserTaskAccumulators(List<UserTaskAccumulator> userTaskAccumulators) {
        this.userTaskAccumulators = userTaskAccumulators;
    }

    public JobAccumulatorsInfo serializedUserTaskAccumulators(
            Map<String, SerializedValueOptionalFailureObject> serializedUserTaskAccumulators) {
        this.serializedUserTaskAccumulators = serializedUserTaskAccumulators;
        return this;
    }

    public JobAccumulatorsInfo putSerializedUserTaskAccumulatorsItem(
            String key,
            SerializedValueOptionalFailureObject serializedUserTaskAccumulatorsItem) {
        if (this.serializedUserTaskAccumulators == null) {
            this.serializedUserTaskAccumulators = new HashMap<String, SerializedValueOptionalFailureObject>();
        }
        this.serializedUserTaskAccumulators.put(key, serializedUserTaskAccumulatorsItem);
        return this;
    }

    /**
     * Get serializedUserTaskAccumulators
     * 
     * @return serializedUserTaskAccumulators
     **/
    @Schema(description = "")
    public Map<String, SerializedValueOptionalFailureObject> getSerializedUserTaskAccumulators() {
        return serializedUserTaskAccumulators;
    }

    public void setSerializedUserTaskAccumulators(
            Map<String, SerializedValueOptionalFailureObject> serializedUserTaskAccumulators) {
        this.serializedUserTaskAccumulators = serializedUserTaskAccumulators;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        JobAccumulatorsInfo jobAccumulatorsInfo = (JobAccumulatorsInfo) o;
        return Objects.equals(this.jobAccumulators, jobAccumulatorsInfo.jobAccumulators)
                && Objects.equals(this.userTaskAccumulators, jobAccumulatorsInfo.userTaskAccumulators)
                && Objects.equals(this.serializedUserTaskAccumulators, jobAccumulatorsInfo.serializedUserTaskAccumulators);
    }

    @Override
    public int hashCode() {
        return Objects.hash(jobAccumulators, userTaskAccumulators, serializedUserTaskAccumulators);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class JobAccumulatorsInfo {\n");

        sb.append("    jobAccumulators: ").append(toIndentedString(jobAccumulators)).append("\n");
        sb.append("    userTaskAccumulators: ").append(toIndentedString(userTaskAccumulators)).append("\n");
        sb.append("    serializedUserTaskAccumulators: ").append(toIndentedString(serializedUserTaskAccumulators)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
