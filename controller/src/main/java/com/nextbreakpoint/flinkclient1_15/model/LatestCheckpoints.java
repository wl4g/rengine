/*
 * Flink JobManager REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1/1.15-SNAPSHOT
 * Contact: user@flink.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.nextbreakpoint.flinkclient1_15.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * LatestCheckpoints
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen",
        date = "2023-04-02T23:14:46.617621+08:00[Asia/Shanghai]")
public class LatestCheckpoints {
    @SerializedName("completed")
    private CompletedCheckpointStatistics completed = null;

    @SerializedName("savepoint")
    private CompletedCheckpointStatistics savepoint = null;

    @SerializedName("failed")
    private FailedCheckpointStatistics failed = null;

    @SerializedName("restored")
    private RestoredCheckpointStatistics restored = null;

    public LatestCheckpoints completed(CompletedCheckpointStatistics completed) {
        this.completed = completed;
        return this;
    }

    /**
     * Get completed
     * 
     * @return completed
     **/
    @Schema(description = "")
    public CompletedCheckpointStatistics getCompleted() {
        return completed;
    }

    public void setCompleted(CompletedCheckpointStatistics completed) {
        this.completed = completed;
    }

    public LatestCheckpoints savepoint(CompletedCheckpointStatistics savepoint) {
        this.savepoint = savepoint;
        return this;
    }

    /**
     * Get savepoint
     * 
     * @return savepoint
     **/
    @Schema(description = "")
    public CompletedCheckpointStatistics getSavepoint() {
        return savepoint;
    }

    public void setSavepoint(CompletedCheckpointStatistics savepoint) {
        this.savepoint = savepoint;
    }

    public LatestCheckpoints failed(FailedCheckpointStatistics failed) {
        this.failed = failed;
        return this;
    }

    /**
     * Get failed
     * 
     * @return failed
     **/
    @Schema(description = "")
    public FailedCheckpointStatistics getFailed() {
        return failed;
    }

    public void setFailed(FailedCheckpointStatistics failed) {
        this.failed = failed;
    }

    public LatestCheckpoints restored(RestoredCheckpointStatistics restored) {
        this.restored = restored;
        return this;
    }

    /**
     * Get restored
     * 
     * @return restored
     **/
    @Schema(description = "")
    public RestoredCheckpointStatistics getRestored() {
        return restored;
    }

    public void setRestored(RestoredCheckpointStatistics restored) {
        this.restored = restored;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        LatestCheckpoints latestCheckpoints = (LatestCheckpoints) o;
        return Objects.equals(this.completed, latestCheckpoints.completed)
                && Objects.equals(this.savepoint, latestCheckpoints.savepoint)
                && Objects.equals(this.failed, latestCheckpoints.failed)
                && Objects.equals(this.restored, latestCheckpoints.restored);
    }

    @Override
    public int hashCode() {
        return Objects.hash(completed, savepoint, failed, restored);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class LatestCheckpoints {\n");

        sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
        sb.append("    savepoint: ").append(toIndentedString(savepoint)).append("\n");
        sb.append("    failed: ").append(toIndentedString(failed)).append("\n");
        sb.append("    restored: ").append(toIndentedString(restored)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
