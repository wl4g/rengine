/*
 * Flink JobManager REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1/1.15-SNAPSHOT
 * Contact: user@flink.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.nextbreakpoint.flinkclient.model;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * JarRunRequestBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen",
        date = "2023-04-02T23:14:46.617621+08:00[Asia/Shanghai]")
public class JarRunRequestBody {
    @SerializedName("entryClass")
    private String entryClass = null;

    @SerializedName("programArgs")
    private String programArgs = null;

    @SerializedName("programArgsList")
    private List<String> programArgsList = null;

    @SerializedName("parallelism")
    private Integer parallelism = null;

    @SerializedName("jobId")
    private String jobId = null;

    @SerializedName("allowNonRestoredState")
    private Boolean allowNonRestoredState = null;

    @SerializedName("savepointPath")
    private String savepointPath = null;

    /**
     * Gets or Sets restoreMode
     */
    @JsonAdapter(RestoreModeEnum.Adapter.class)
    public enum RestoreModeEnum {
        CLAIM("CLAIM"), NO_CLAIM("NO_CLAIM"), LEGACY("LEGACY");

        private String value;

        RestoreModeEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static RestoreModeEnum fromValue(String text) {
            for (RestoreModeEnum b : RestoreModeEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<RestoreModeEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final RestoreModeEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public RestoreModeEnum read(final JsonReader jsonReader) throws IOException {
                Object value = jsonReader.nextString();
                return RestoreModeEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("restoreMode")
    private RestoreModeEnum restoreMode = null;

    public JarRunRequestBody entryClass(String entryClass) {
        this.entryClass = entryClass;
        return this;
    }

    /**
     * Get entryClass
     * 
     * @return entryClass
     **/
    @Schema(description = "")
    public String getEntryClass() {
        return entryClass;
    }

    public void setEntryClass(String entryClass) {
        this.entryClass = entryClass;
    }

    public JarRunRequestBody programArgs(String programArgs) {
        this.programArgs = programArgs;
        return this;
    }

    /**
     * Get programArgs
     * 
     * @return programArgs
     **/
    @Schema(description = "")
    public String getProgramArgs() {
        return programArgs;
    }

    public void setProgramArgs(String programArgs) {
        this.programArgs = programArgs;
    }

    public JarRunRequestBody programArgsList(List<String> programArgsList) {
        this.programArgsList = programArgsList;
        return this;
    }

    public JarRunRequestBody addProgramArgsListItem(String programArgsListItem) {
        if (this.programArgsList == null) {
            this.programArgsList = new ArrayList<String>();
        }
        this.programArgsList.add(programArgsListItem);
        return this;
    }

    /**
     * Get programArgsList
     * 
     * @return programArgsList
     **/
    @Schema(description = "")
    public List<String> getProgramArgsList() {
        return programArgsList;
    }

    public void setProgramArgsList(List<String> programArgsList) {
        this.programArgsList = programArgsList;
    }

    public JarRunRequestBody parallelism(Integer parallelism) {
        this.parallelism = parallelism;
        return this;
    }

    /**
     * Get parallelism
     * 
     * @return parallelism
     **/
    @Schema(description = "")
    public Integer getParallelism() {
        return parallelism;
    }

    public void setParallelism(Integer parallelism) {
        this.parallelism = parallelism;
    }

    public JarRunRequestBody jobId(String jobId) {
        this.jobId = jobId;
        return this;
    }

    /**
     * Get jobId
     * 
     * @return jobId
     **/
    @Schema(description = "")
    public String getJobId() {
        return jobId;
    }

    public void setJobId(String jobId) {
        this.jobId = jobId;
    }

    public JarRunRequestBody allowNonRestoredState(Boolean allowNonRestoredState) {
        this.allowNonRestoredState = allowNonRestoredState;
        return this;
    }

    /**
     * Get allowNonRestoredState
     * 
     * @return allowNonRestoredState
     **/
    @Schema(description = "")
    public Boolean isAllowNonRestoredState() {
        return allowNonRestoredState;
    }

    public void setAllowNonRestoredState(Boolean allowNonRestoredState) {
        this.allowNonRestoredState = allowNonRestoredState;
    }

    public JarRunRequestBody savepointPath(String savepointPath) {
        this.savepointPath = savepointPath;
        return this;
    }

    /**
     * Get savepointPath
     * 
     * @return savepointPath
     **/
    @Schema(description = "")
    public String getSavepointPath() {
        return savepointPath;
    }

    public void setSavepointPath(String savepointPath) {
        this.savepointPath = savepointPath;
    }

    public JarRunRequestBody restoreMode(RestoreModeEnum restoreMode) {
        this.restoreMode = restoreMode;
        return this;
    }

    /**
     * Get restoreMode
     * 
     * @return restoreMode
     **/
    @Schema(description = "")
    public RestoreModeEnum getRestoreMode() {
        return restoreMode;
    }

    public void setRestoreMode(RestoreModeEnum restoreMode) {
        this.restoreMode = restoreMode;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        JarRunRequestBody jarRunRequestBody = (JarRunRequestBody) o;
        return Objects.equals(this.entryClass, jarRunRequestBody.entryClass)
                && Objects.equals(this.programArgs, jarRunRequestBody.programArgs)
                && Objects.equals(this.programArgsList, jarRunRequestBody.programArgsList)
                && Objects.equals(this.parallelism, jarRunRequestBody.parallelism)
                && Objects.equals(this.jobId, jarRunRequestBody.jobId)
                && Objects.equals(this.allowNonRestoredState, jarRunRequestBody.allowNonRestoredState)
                && Objects.equals(this.savepointPath, jarRunRequestBody.savepointPath)
                && Objects.equals(this.restoreMode, jarRunRequestBody.restoreMode);
    }

    @Override
    public int hashCode() {
        return Objects.hash(entryClass, programArgs, programArgsList, parallelism, jobId, allowNonRestoredState, savepointPath,
                restoreMode);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class JarRunRequestBody {\n");

        sb.append("    entryClass: ").append(toIndentedString(entryClass)).append("\n");
        sb.append("    programArgs: ").append(toIndentedString(programArgs)).append("\n");
        sb.append("    programArgsList: ").append(toIndentedString(programArgsList)).append("\n");
        sb.append("    parallelism: ").append(toIndentedString(parallelism)).append("\n");
        sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
        sb.append("    allowNonRestoredState: ").append(toIndentedString(allowNonRestoredState)).append("\n");
        sb.append("    savepointPath: ").append(toIndentedString(savepointPath)).append("\n");
        sb.append("    restoreMode: ").append(toIndentedString(restoreMode)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
