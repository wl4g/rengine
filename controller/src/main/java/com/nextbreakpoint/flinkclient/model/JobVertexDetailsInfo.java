/*
 * Flink JobManager REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1/1.15-SNAPSHOT
 * Contact: user@flink.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.nextbreakpoint.flinkclient.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * JobVertexDetailsInfo
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen",
        date = "2023-04-02T23:14:46.617621+08:00[Asia/Shanghai]")
public class JobVertexDetailsInfo {
    @SerializedName("id")
    private String id = null;

    @SerializedName("name")
    private String name = null;

    @SerializedName("parallelism")
    private Integer parallelism = null;

    @SerializedName("maxParallelism")
    private Integer maxParallelism = null;

    @SerializedName("now")
    private Long now = null;

    @SerializedName("subtasks")
    private List<SubtaskExecutionAttemptDetailsInfo> subtasks = null;

    public JobVertexDetailsInfo id(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     * 
     * @return id
     **/
    @Schema(description = "")
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public JobVertexDetailsInfo name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     * 
     * @return name
     **/
    @Schema(description = "")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public JobVertexDetailsInfo parallelism(Integer parallelism) {
        this.parallelism = parallelism;
        return this;
    }

    /**
     * Get parallelism
     * 
     * @return parallelism
     **/
    @Schema(description = "")
    public Integer getParallelism() {
        return parallelism;
    }

    public void setParallelism(Integer parallelism) {
        this.parallelism = parallelism;
    }

    public JobVertexDetailsInfo maxParallelism(Integer maxParallelism) {
        this.maxParallelism = maxParallelism;
        return this;
    }

    /**
     * Get maxParallelism
     * 
     * @return maxParallelism
     **/
    @Schema(description = "")
    public Integer getMaxParallelism() {
        return maxParallelism;
    }

    public void setMaxParallelism(Integer maxParallelism) {
        this.maxParallelism = maxParallelism;
    }

    public JobVertexDetailsInfo now(Long now) {
        this.now = now;
        return this;
    }

    /**
     * Get now
     * 
     * @return now
     **/
    @Schema(description = "")
    public Long getNow() {
        return now;
    }

    public void setNow(Long now) {
        this.now = now;
    }

    public JobVertexDetailsInfo subtasks(List<SubtaskExecutionAttemptDetailsInfo> subtasks) {
        this.subtasks = subtasks;
        return this;
    }

    public JobVertexDetailsInfo addSubtasksItem(SubtaskExecutionAttemptDetailsInfo subtasksItem) {
        if (this.subtasks == null) {
            this.subtasks = new ArrayList<SubtaskExecutionAttemptDetailsInfo>();
        }
        this.subtasks.add(subtasksItem);
        return this;
    }

    /**
     * Get subtasks
     * 
     * @return subtasks
     **/
    @Schema(description = "")
    public List<SubtaskExecutionAttemptDetailsInfo> getSubtasks() {
        return subtasks;
    }

    public void setSubtasks(List<SubtaskExecutionAttemptDetailsInfo> subtasks) {
        this.subtasks = subtasks;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        JobVertexDetailsInfo jobVertexDetailsInfo = (JobVertexDetailsInfo) o;
        return Objects.equals(this.id, jobVertexDetailsInfo.id) && Objects.equals(this.name, jobVertexDetailsInfo.name)
                && Objects.equals(this.parallelism, jobVertexDetailsInfo.parallelism)
                && Objects.equals(this.maxParallelism, jobVertexDetailsInfo.maxParallelism)
                && Objects.equals(this.now, jobVertexDetailsInfo.now)
                && Objects.equals(this.subtasks, jobVertexDetailsInfo.subtasks);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, name, parallelism, maxParallelism, now, subtasks);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class JobVertexDetailsInfo {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    parallelism: ").append(toIndentedString(parallelism)).append("\n");
        sb.append("    maxParallelism: ").append(toIndentedString(maxParallelism)).append("\n");
        sb.append("    now: ").append(toIndentedString(now)).append("\n");
        sb.append("    subtasks: ").append(toIndentedString(subtasks)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
