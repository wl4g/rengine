/*
 * Flink JobManager REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1/1.15-SNAPSHOT
 * Contact: user@flink.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.nextbreakpoint.flinkclient.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * DashboardConfiguration
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen",
        date = "2023-04-02T23:14:46.617621+08:00[Asia/Shanghai]")
public class DashboardConfiguration {
    @SerializedName("refresh-interval")
    private Long refreshInterval = null;

    @SerializedName("timezone-name")
    private String timezoneName = null;

    @SerializedName("timezone-offset")
    private Integer timezoneOffset = null;

    @SerializedName("flink-version")
    private String flinkVersion = null;

    @SerializedName("flink-revision")
    private String flinkRevision = null;

    @SerializedName("features")
    private Features features = null;

    public DashboardConfiguration refreshInterval(Long refreshInterval) {
        this.refreshInterval = refreshInterval;
        return this;
    }

    /**
     * Get refreshInterval
     * 
     * @return refreshInterval
     **/
    @Schema(description = "")
    public Long getRefreshInterval() {
        return refreshInterval;
    }

    public void setRefreshInterval(Long refreshInterval) {
        this.refreshInterval = refreshInterval;
    }

    public DashboardConfiguration timezoneName(String timezoneName) {
        this.timezoneName = timezoneName;
        return this;
    }

    /**
     * Get timezoneName
     * 
     * @return timezoneName
     **/
    @Schema(description = "")
    public String getTimezoneName() {
        return timezoneName;
    }

    public void setTimezoneName(String timezoneName) {
        this.timezoneName = timezoneName;
    }

    public DashboardConfiguration timezoneOffset(Integer timezoneOffset) {
        this.timezoneOffset = timezoneOffset;
        return this;
    }

    /**
     * Get timezoneOffset
     * 
     * @return timezoneOffset
     **/
    @Schema(description = "")
    public Integer getTimezoneOffset() {
        return timezoneOffset;
    }

    public void setTimezoneOffset(Integer timezoneOffset) {
        this.timezoneOffset = timezoneOffset;
    }

    public DashboardConfiguration flinkVersion(String flinkVersion) {
        this.flinkVersion = flinkVersion;
        return this;
    }

    /**
     * Get flinkVersion
     * 
     * @return flinkVersion
     **/
    @Schema(description = "")
    public String getFlinkVersion() {
        return flinkVersion;
    }

    public void setFlinkVersion(String flinkVersion) {
        this.flinkVersion = flinkVersion;
    }

    public DashboardConfiguration flinkRevision(String flinkRevision) {
        this.flinkRevision = flinkRevision;
        return this;
    }

    /**
     * Get flinkRevision
     * 
     * @return flinkRevision
     **/
    @Schema(description = "")
    public String getFlinkRevision() {
        return flinkRevision;
    }

    public void setFlinkRevision(String flinkRevision) {
        this.flinkRevision = flinkRevision;
    }

    public DashboardConfiguration features(Features features) {
        this.features = features;
        return this;
    }

    /**
     * Get features
     * 
     * @return features
     **/
    @Schema(description = "")
    public Features getFeatures() {
        return features;
    }

    public void setFeatures(Features features) {
        this.features = features;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DashboardConfiguration dashboardConfiguration = (DashboardConfiguration) o;
        return Objects.equals(this.refreshInterval, dashboardConfiguration.refreshInterval)
                && Objects.equals(this.timezoneName, dashboardConfiguration.timezoneName)
                && Objects.equals(this.timezoneOffset, dashboardConfiguration.timezoneOffset)
                && Objects.equals(this.flinkVersion, dashboardConfiguration.flinkVersion)
                && Objects.equals(this.flinkRevision, dashboardConfiguration.flinkRevision)
                && Objects.equals(this.features, dashboardConfiguration.features);
    }

    @Override
    public int hashCode() {
        return Objects.hash(refreshInterval, timezoneName, timezoneOffset, flinkVersion, flinkRevision, features);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DashboardConfiguration {\n");

        sb.append("    refreshInterval: ").append(toIndentedString(refreshInterval)).append("\n");
        sb.append("    timezoneName: ").append(toIndentedString(timezoneName)).append("\n");
        sb.append("    timezoneOffset: ").append(toIndentedString(timezoneOffset)).append("\n");
        sb.append("    flinkVersion: ").append(toIndentedString(flinkVersion)).append("\n");
        sb.append("    flinkRevision: ").append(toIndentedString(flinkRevision)).append("\n");
        sb.append("    features: ").append(toIndentedString(features)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
